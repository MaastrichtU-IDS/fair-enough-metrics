[project]
version = "0.1.0"
name = "fair-enough-metrics"
description = "Implementation of FAIR metrics tests in python using the fair-test library"
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE" }
authors = [
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
]
keywords = [
    "FAIR tests",
    "FAIR",
    "tests",
    "evaluation",
]

dependencies = [
    "fair-test>=0.0.7",
    "PyYAML",
    "PyShEx",
    "pyshacl",
    # "duckduckgo-search",
]

[project.optional-dependencies]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "mypy ==0.971",
    "isort >=5.0.6,<6.0.0",
    "flake8 >=3.8.3,<6.0.0",
    "Flake8-pyproject>=1.1.0.post0",
    "autoflake >=1.4.0,<2.0.0",
    "httpx",
]
dev = [
    "pre-commit >=2.17.0,<3.0.0",
    "uvicorn[standard] >=0.12.0,<0.19.0",
]


[project.urls]
Homepage = "https://github.com/MaastrichtU-IDS/fair-enough-metrics"
History = "https://github.com/MaastrichtU-IDS/fair-enough-metrics/releases"
Tracker = "https://github.com/MaastrichtU-IDS/fair-enough-metrics/issues"
Source = "https://github.com/MaastrichtU-IDS/fair-enough-metrics"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "test",
    "dev",
]
post-install-commands = [
    "pre-commit install",
]

[tool.hatch.envs.default.scripts]
dev = "./scripts/dev.sh"
test = "./scripts/test.sh"
docs = "./scripts/docs.sh"
format = "./scripts/format.sh"
lint = "./scripts/lint.sh"


[tool.isort]
line_length = 120
skip = ["nanopub/__init__.py"]
profile = "black"


[tool.coverage.run]
source = ["project"]
branch = true

[tool.coverage.report]
omit = ["nanopub/trustyuri/*", "tests/*"]


[tool.flake8]
max-complexity = 17
max-line-length = 120
per-file-ignores = [
    "__init__.py:F401",
]
ignore = [
    "E501", # line too long
    "E303", # too many blank lines
    "E301", # expected 1 blank lines found 0
    "W503", # line break before binary operator
]


[tool.mypy]
strict = false
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true


[tool.pytest.ini_options]
markers = [
    "no_rsa_key: mark a test as a test only run when there is no nanopub RSA key setup.",
]

# [tool.black]
# color = true
# line-length = 120
# target-version = ['py310']
# skip-string-normalization = true
